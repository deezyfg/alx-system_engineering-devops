# Distributed Web Infrastructure Design

## Infrastructure Diagram

![Infrastructure Diagram](https://imgur.com/zSxgNzf)

---

## Explanation of Specifics

### For every additional element, why you are adding it

- **Explanation:** The addition of a new server allows for the integration of a load balancer to manage high incoming traffic. It also eliminates the risk of a single point of failure inherent in having only one server.

### What distribution algorithm your load balancer is configured with and how it
works

- **Explanation:**  Our load balancer uses the Round Robin algorithm, distributing requests sequentially among servers unless a server is offline. Requests are served in order, starting from the first server after reaching the last. This algorithm is suitable when servers share equal specifications and persistent connections are limited.

### Is your load-balancer enabling an Active-Active or Active-Passive setup, explain the difference between both

- **Explanation:** The load balancer is configured for an Active-Active setup, where both nodes (servers) actively provide the same type of service simultaneously.  This differs from an Active-Passive setup, where not all nodes are active. In the case of two nodes, if the first node is already active, the second node must be passive or on standby. The key difference between these two architectures is performance. Active-active clusters give you access to the resources of all your servers during normal operation. In an active-passive cluster, the backup server only sees action during failover events.

### How a database Primary-Replica (Master-Slave) cluster works

- **Explanation:** The Primary-Replica (Master-Slave) replication enables data from a primary database server (the master) to be duplicated onto one or more other database servers (the replicas). Updates made on the master propagate to the replicas. Synchronous replication occurs when changes are applied to both the master and replica simultaneously, while asynchronous replication involves queuing changes to be written later. This setup enhances scalability by distributing read access across multiple servers and can also serve purposes like failover and data analysis.

### What is the difference between the Primary node and the Replica node in regard to the application

- **Explanation:** A primary node contains the original instance of the application, while a replica node is a duplicate of the primary node designed to provide redundant copies of the application codebase. These redundant copies safeguard against hardware failures and enhance capacity for serving read requests, such as document retrieval or searching.

## Identified Issues

### Single Point of Failure (SPOF):

- **Issue:** The infrastructure's primary vulnerability lies in its reliance on a single load balancer, posing a significant risk to service availability in the event of load balancer failure.

### Security issues (no firewall, no HTTPS)

- **Issue:** Security concerns arise from the application's communication over the insecure HTTP protocol, potentially exposing sensitive information to attackers. Additionally, the absence of a firewall leaves the system vulnerable to denial-of-service attacks and unauthorized access through open ports, leading to potential data breaches.

### No Monitoring:

- **Issue:** "You cannot fix or improve what you cannot measure" is a well-known saying in the tech industry. The absence of monitoring prevents the timely identification and resolution of problems, downtime, or security threats. Implementing monitoring tools enables proactive maintenance, enhances productivity, and improves the overall user experience.
---

## References
- [How does Software and Hardware Load Balancer Work? (Loadbalancer Algorithms Explained with Examples)](https://www.thegeekstuff.com/2016/01/load-balancer-intro/)
- [MySQL Master-Slave Replication on the Same Machine](https://www.toptal.com/mysql/mysql-master-slave-replication-tutorial)
- [What Is Active-Active Clustering](https://www.purestorage.com/au/knowledge/what-is-active-active.html)